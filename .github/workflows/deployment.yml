name: CI/CD
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  push_to_registry:
    name: Deploy docker image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      #- name: Set up QEMU
      #  uses: docker/setup-qemu-action@v2

     # - name: Set up Docker Buildx
     #   uses: docker/setup-buildx-action@v2

      - name: Log in to registry
        uses: docker/login-action@v2
        with:
          registry: registry.null.care
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            registry.null.care/${{ github.repository }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          # platforms: linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
      - name: Deploy image on server
        id: run_request
        uses: tyrrrz/action-http-request@v1
        with:
          url: http://api.null.care/run
          method: POST
          headers: |
            Content-Type: application/json
            x-api-key: ${{ secrets.API_KEY }}
          body: |
            {
              "image": "registry.null.care/${{ github.repository }}",
              "name": "docker-dashboard",
              "port": "9550:5000",
              "args": ["-e", "ApiKey=${{ secrets.CONTAINER_API_KEY }}", "-v", "/var/run/docker.sock:/var/run/docker.sock"]
            }

      - name: Deploy output
        run: |
          echo "Status: ${{ steps.request.run_request.status }}"
          echo "Body: ${{ steps.request.run_request.body }}"
